# **************************************************************************************************************
#
# Test Trigger configuration file
#
# 08.11.2022
#
# **************************************************************************************************************
# Format: extended json format with the possibility to comment out lines (by '#' at the beginning of the line).
# The reference for relative paths is the position of this file.
# --------------------------------------------------------------------------------------------------------------

# Command line parameter (--params) are used for both section "COMPONENTS" and section "TESTTYPES".

{

# Section "COMPONENTS":
# ---------------------
# 
# It is assumed that "TESTFOLDER" is a subfolder of "COMPONENTROOTPATH" and that "TESTEXECUTOR" (the name only) is placed inside "TESTFOLDER"!
# "TESTTYPE" has to be one of ['ROBOT', 'PYTEST']
# It is assumed that "COMPONENTROOTPATH" does exist.
# The complete path of "LOGFILE" is being created by the test executors.
# "LOCALCOMMANDLINE" is optional; other keys of section "COMPONENTS" are required.
# Meaning of "LOCALCOMMANDLINE" is: command line part that is only valid for this single test folder

   "COMPONENTS" : [
                    {
                       "COMPONENTROOTPATH" : "../../../../robotframework-extensions-collection",
                       "TESTFOLDER"        : "test",
                       "TESTTYPE"          : "ROBOT",
                       "TESTEXECUTOR"      : "executerobottest.py",
                       # "LOCALCOMMANDLINE"  : ["--variable config_file:\"${config_file}\""],
                       "LOGFILE"           : "../../../../robotframework-extensions-collection/test/aiotestlogfiles/aiotestlogfile.xml"
                    },
                    {
                       "COMPONENTROOTPATH" : "../../../../python-extensions-collection",
                       "TESTFOLDER"        : "pytest",
                       "TESTTYPE"          : "PYTEST",
                       "TESTEXECUTOR"      : "executepytest.py",
                       "LOGFILE"           : "../../../../python-extensions-collection/pytest/aiotestlogfiles/aiotestlogfile.xml"
                    },
                    {
                       "COMPONENTROOTPATH" : "../../../../robotframework-testsuitesmanagement",
                       "TESTFOLDER"        : "test",
                       "TESTTYPE"          : "ROBOT",
                       "TESTEXECUTOR"      : "executerobottest.py",
                       "LOGFILE"           : "../../../../robotframework-testsuitesmanagement/test/aiotestlogfiles/aiotestlogfile.xml"
                    }
                  ],

# Section "TESTTYPES":
# --------------------
#
# Defines for every test type:
# - the path and name of the database executor
# - the command line of the database executor (except the test log file containing the test results - is considered internally)
# The log file ("LOGFILE") is taken over from setion "COMPONENTS" and must not be defined here!
# A global command line (similar to --robotcommandline and --pytestcommandline) is not available for database executors (only "LOCALCOMMANDLINE").
# Finally (after internally the parameters are resolved) the LOCALCOMMANDLINE only contains parameter that are defined in the command line of the Test Trigger.
# "LOCALCOMMANDLINE" is optional; other keys of section "TESTTYPES" are required.
# The robot2db 'append' mode is activated by --params "append=-append" in command line of Test Trigger.
# The robot2db 'dryrun' mode is activated by --params "dryrun=-dryrun" in command line of Test Trigger.

   "TESTTYPES" : {
                  "ROBOT"  : {
                               "DATABASEEXECUTOR" : "%ROBOTPYTHONPATH%/Lib/site-packages/RobotResults2DB/robot2db.py",
                               "LOCALCOMMANDLINE" : ["${server}", "${user}", "${password}", "${database}", "-UUID ${UUID}", "--variant ${variant}", "--versions ${versions}", "--config ${config}", "${append}", "${dryrun}"]
                             },
                  "PYTEST" : {
                               "DATABASEEXECUTOR" : "../mocks/pytest2db-mock.py"
                             }
                }
}
